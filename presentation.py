import streamlit as st
import reveal_slides as rs
from PIL import Image  # –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

def presentation_page():
    st.title("üéØ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞: –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–∞–∑–æ–≤ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –≤ —Å–∞–π–¥–±–∞—Ä–µ
    with st.sidebar:
        st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏")
        theme = st.selectbox(
            "–¶–≤–µ—Ç–æ–≤–∞—è —Ç–µ–º–∞",
            ["black", "white", "league", "beige", "sky", "night", "serif", "simple", "solarized"],
            index=0
        )
        transition = st.selectbox(
            "–ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞",
            ["slide", "convex", "concave", "zoom", "none"],
            index=0
        )
        st.markdown("---")
        st.info("‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–µ–ª–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")

    # –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ä–∞–∑–º–µ—Ç–∫–æ–π
    presentation_markdown = """
    <!-- .slide: data-background-color="#2d3e50" -->
    # üè≠ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–∞–∑–æ–≤ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
    ### –°–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
    ---
    ## üìå –¶–µ–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞
    - –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ ML-–º–æ–¥–µ–ª–∏ –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –æ—Ç–∫–∞–∑–æ–≤
    - –°–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–µ–≤ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –Ω–∞ 20-30%
    - –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞—Ç—Ä–∞—Ç –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ
    
    ```python
    # –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞
    model = RandomForestClassifier()
    model.fit(X_train, y_train)
    ```
    ---
    <!-- .slide: data-background="#4b6cb7" -->
    ## üìä –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ
    **–î–∞—Ç–∞—Å–µ—Ç:** AI4I 2020 Predictive Maintenance  
    **–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**
    - 10,000 –∑–∞–ø–∏—Å–µ–π
    - 14 –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
    - 5 —Ç–∏–ø–æ–≤ –æ—Ç–∫–∞–∑–æ–≤
    
    | –ü–∞—Ä–∞–º–µ—Ç—Ä          | –î–∏–∞–ø–∞–∑–æ–Ω –∑–Ω–∞—á–µ–Ω–∏–π |
    |-------------------|------------------|
    | –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞       | 250-350K         |
    | –°–∫–æ—Ä–æ—Å—Ç—å –≤—Ä–∞—â–µ–Ω–∏—è | 1000-3000 rpm    |
    ---
    ## üõ†Ô∏è –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
    <div>
    **–≠—Ç–∞–ø—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:**
    1. –£–¥–∞–ª–µ–Ω–∏–µ ID-–ø–æ–ª–µ–π
    2. –ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    3. –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
    4. –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –∫–ª–∞—Å—Å–æ–≤
    </div>
    <div>
    ```python
    # –ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏
    scaler = StandardScaler()
    X_scaled = scaler.fit_transform(X)
    ```
    </div>
    </div>
    ---
    ## ü§ñ –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π
    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
    <div>
    **–¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–µ –º–æ–¥–µ–ª–∏:**
    - –õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è
    - –°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å
    - XGBoost
    - SVM
    </div>
    <div>
    **–õ—É—á—à–∞—è –º–æ–¥–µ–ª—å:**
    ```python
    RandomForestClassifier(
        n_estimators=200,
        max_depth=10,
        random_state=42
    )
    ```
    </div>
    </div>
    ---
    ## üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
    <div>
    **–ú–µ—Ç—Ä–∏–∫–∏:**
    - Accuracy: 97.4%
    - Precision: 0.89
    - Recall: 0.75
    - AUC-ROC: 0.98
    </div>
    <div>
    ```python
    print(classification_report(
        y_test, 
        y_pred,
        target_names=["–ù–µ—Ç –æ—Ç–∫–∞–∑–∞", "–û—Ç–∫–∞–∑"]
    ))
    ```
    </div>
    </div>
    ---
    ## üöÄ –î–∞–ª—å–Ω–µ–π—à–µ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ
    **–ü–ª–∞–Ω—ã —É–ª—É—á—à–µ–Ω–∏—è:**
    1. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å IoT-–¥–∞—Ç—á–∏–∫–∞–º–∏
    2. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è real-time –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è
    3. –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ API –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    
    **–ë–∏–∑–Ω–µ—Å-—ç—Ñ—Ñ–µ–∫—Ç:**
    - –°–Ω–∏–∂–µ–Ω–∏–µ –∑–∞—Ç—Ä–∞—Ç –Ω–∞ 15-25%
    - –£–≤–µ–ª–∏—á–µ–Ω–∏–µ uptime –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
    ---
    <!-- .slide: data-background-color="#2d3e50" -->
    ## üôè –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
    ### –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ!
    ### –í–æ–ø—Ä–æ—Å—ã?
    """

    # –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–≥–æ—Ç–∏–ø–∞ (–ø—Ä–∏–º–µ—Ä)
    try:
        logo = Image.open("logo.png")
        st.sidebar.image(logo, width=200)
    except:
        st.sidebar.warning("–õ–æ–≥–æ—Ç–∏–ø –Ω–µ –Ω–∞–π–¥–µ–Ω")

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
    rs.slides(
        presentation_markdown,
        height=700,
        theme=theme,
        config={
            "transition": transition,
            "controls": True,
            "progress": True,
            "center": True,
            "slideNumber": True
        },
        markdown_props={
            "data-separator": "^---$",
            "data-separator-vertical": "^--$",
            "data-separator-notes": "^Note:"
        }
    )

if __name__ == "__main__":
    presentation_page()